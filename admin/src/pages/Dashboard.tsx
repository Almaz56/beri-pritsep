import React, { useState, useEffect } from 'react';
import { adminApi } from '../api';
import { useAdminAuth } from '../contexts/AdminAuthContext';
import './Dashboard.css';

interface DashboardStats {
  totalUsers: number;
  pendingVerifications: number;
  totalBookings: number;
  activeBookings: number;
  totalRevenue: number;
  pendingPayments: number;
  totalTrailers: number;
  availableTrailers: number;
  totalLocations: number;
  totalTransactions: number;
}

const mockStats: DashboardStats = {
  totalUsers: 0,
  pendingVerifications: 0,
  totalBookings: 0,
  activeBookings: 0,
  totalRevenue: 0,
  pendingPayments: 0,
  totalTrailers: 0,
  availableTrailers: 0,
  totalLocations: 0,
  totalTransactions: 0
};

type Page = 'dashboard' | 'trailers' | 'locations' | 'users' | 'bookings' | 'transactions' | 'photo-comparisons' | 'support';

interface DashboardProps {
  onNavigate: (page: Page) => void;
}

const Dashboard: React.FC<DashboardProps> = ({ onNavigate }) => {
  const { token } = useAdminAuth();
  const [stats, setStats] = useState<DashboardStats>(mockStats);
  const [loading, setLoading] = useState(true);
  const [recentActivity, setRecentActivity] = useState<any[]>([]);

  useEffect(() => {
    if (token) {
      loadDashboardData();
    }
  }, [token]);

  const loadDashboardData = async () => {
    if (!token) return;
    
    try {
      setLoading(true);
      
      // Load real stats from API
      const statsResponse = await adminApi.getStats(token);
      if (statsResponse.success && statsResponse.data) {
        setStats(statsResponse.data);
      } else {
        // Fallback to mock data if API fails
        setStats(mockStats);
      }
      
      // Mock recent activity for now
      setRecentActivity([
        { type: 'booking', message: '–ù–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ #booking_3', time: '2 –º–∏–Ω—É—Ç—ã –Ω–∞–∑–∞–¥' },
        { type: 'payment', message: '–û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞: 1,200‚ÇΩ', time: '5 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥' },
        { type: 'user', message: '–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', time: '10 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥' },
        { type: 'verification', message: '–î–æ–∫—É–º–µ–Ω—Ç—ã –æ–¥–æ–±—Ä–µ–Ω—ã: –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', time: '15 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥' },
        { type: 'booking', message: '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: #booking_1', time: '20 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥' }
      ]);
    } catch (error) {
      console.error('Error loading dashboard data:', error);
      // Fallback to mock data
      setStats(mockStats);
    } finally {
      setLoading(false);
    }
  };

  const getActivityIcon = (type: string) => {
    switch (type) {
      case 'booking':
        return 'üìÖ';
      case 'payment':
        return 'üí∞';
      case 'user':
        return 'üë§';
      case 'verification':
        return '‚úÖ';
      default:
        return 'üìã';
    }
  };

  if (loading) {
    return <div className="admin-dashboard loading">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞...</div>;
  }

  return (
    <div className="admin-dashboard">
      <div className="dashboard-header">
        <h1>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h1>
        <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å "–ë–µ—Ä–∏ –ø—Ä–∏—Ü–µ–ø"</p>
      </div>

      <div className="stats-grid">
        <div className="stat-card primary">
          <div className="stat-icon">üë•</div>
          <div className="stat-content">
            <h3>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h3>
            <div className="stat-number">{stats.totalUsers}</div>
            <div className="stat-subtitle">
              {stats.pendingVerifications} –æ–∂–∏–¥–∞—é—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
            </div>
          </div>
        </div>

        <div className="stat-card success">
          <div className="stat-icon">üìÖ</div>
          <div className="stat-content">
            <h3>–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</h3>
            <div className="stat-number">{stats.totalBookings}</div>
            <div className="stat-subtitle">
              {stats.activeBookings} –∞–∫—Ç–∏–≤–Ω—ã—Ö
            </div>
          </div>
        </div>

        <div className="stat-card warning">
          <div className="stat-icon">üí∞</div>
          <div className="stat-content">
            <h3>–î–æ—Ö–æ–¥—ã</h3>
            <div className="stat-number">{stats.totalRevenue.toLocaleString()}‚ÇΩ</div>
            <div className="stat-subtitle">
              {stats.pendingPayments.toLocaleString()}‚ÇΩ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ
            </div>
          </div>
        </div>

        <div className="stat-card info">
          <div className="stat-icon">üöõ</div>
          <div className="stat-content">
            <h3>–ü—Ä–∏—Ü–µ–ø—ã</h3>
            <div className="stat-number">{stats.totalTrailers}</div>
            <div className="stat-subtitle">
              {stats.availableTrailers} –¥–æ—Å—Ç—É–ø–Ω–æ
            </div>
          </div>
        </div>

        <div className="stat-card secondary">
          <div className="stat-icon">üìç</div>
          <div className="stat-content">
            <h3>–õ–æ–∫–∞—Ü–∏–∏</h3>
            <div className="stat-number">{stats.totalLocations}</div>
            <div className="stat-subtitle">
              –ê–≤—Ç–æ–ø–∞—Ä–∫–∏
            </div>
          </div>
        </div>

        <div className="stat-card dark">
          <div className="stat-icon">üí≥</div>
          <div className="stat-content">
            <h3>–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</h3>
            <div className="stat-number">{stats.totalTransactions}</div>
            <div className="stat-subtitle">
              –í—Å–µ–≥–æ –æ–ø–µ—Ä–∞—Ü–∏–π
            </div>
          </div>
        </div>
      </div>

      <div className="dashboard-content">
        <div className="recent-activity">
          <h2>–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h2>
          <div className="activity-list">
            {recentActivity.map((activity, index) => (
              <div key={index} className="activity-item">
                <div className="activity-icon">
                  {getActivityIcon(activity.type)}
                </div>
                <div className="activity-content">
                  <p className="activity-message">{activity.message}</p>
                  <span className="activity-time">{activity.time}</span>
                </div>
              </div>
            ))}
          </div>
        </div>

        <div className="quick-actions">
          <h2>–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
          <div className="actions-grid">
            <button className="action-button" onClick={() => onNavigate('trailers')}>
              <div className="action-icon">üöõ</div>
              <div className="action-text">
                <h4>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏—Ü–µ–ø–∞–º–∏</h4>
                <p>–î–æ–±–∞–≤–∏—Ç—å, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏—Ü–µ–ø—ã</p>
              </div>
            </button>

            <button className="action-button" onClick={() => onNavigate('locations')}>
              <div className="action-icon">üìç</div>
              <div className="action-text">
                <h4>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏—è–º–∏</h4>
                <p>–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–ø–∞—Ä–∫–∏</p>
              </div>
            </button>

            <button className="action-button" onClick={() => onNavigate('users')}>
              <div className="action-icon">üë•</div>
              <div className="action-text">
                <h4>–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h4>
                <p>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã</p>
              </div>
            </button>

            <button className="action-button" onClick={() => onNavigate('bookings')}>
              <div className="action-icon">üìÖ</div>
              <div className="action-text">
                <h4>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏</h4>
                <p>–ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</p>
              </div>
            </button>

            <button className="action-button" onClick={() => onNavigate('transactions')}>
              <div className="action-icon">üí≥</div>
              <div className="action-text">
                <h4>–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏</h4>
                <p>–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ –ø–ª–∞—Ç–µ–∂–∏</p>
              </div>
            </button>

            <button className="action-button" onClick={() => onNavigate('photo-comparisons')}>
              <div className="action-icon">üì∏</div>
              <div className="action-text">
                <h4>–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ</h4>
                <p>–ê–Ω–∞–ª–∏–∑ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π</p>
              </div>
            </button>

            <button className="action-button" onClick={() => onNavigate('support')}>
              <div className="action-icon">üí¨</div>
              <div className="action-text">
                <h4>–ü–æ–¥–¥–µ—Ä–∂–∫–∞</h4>
                <p>–ß–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</p>
              </div>
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Dashboard;
